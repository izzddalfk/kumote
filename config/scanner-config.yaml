# scanner-config.yaml
# Project Scanner Configuration for Kumote Remote Work Assistant

# =============================================================================
# PROJECT SHORTCUTS
# =============================================================================
# Define quick shortcuts for frequently accessed projects
# Usage: User can type "taqwa" instead of "TaqwaBoard"
shortcuts:
  taqwaboard: TaqwaBoard
  carlogbook: CarLogbook
  personalweb: PersonalWebsite

# =============================================================================
# PROJECT DETECTION INDICATORS
# =============================================================================
# Files/directories that indicate a project type
scan_indicators:
  # Language-specific files
  - go.mod              # Go projects
  - go.sum              # Go dependency lock
  - package.json        # Node.js/JavaScript projects
  - yarn.lock           # Yarn dependency lock
  - package-lock.json   # NPM dependency lock
  - requirements.txt    # Python projects
  - Pipfile            # Python Pipenv projects
  - pyproject.toml     # Modern Python projects
  - setup.py           # Python packages
  - Cargo.toml         # Rust projects
  - Cargo.lock         # Rust dependency lock
  - composer.json      # PHP projects
  - Gemfile           # Ruby projects
  - pom.xml           # Java Maven projects
  - build.gradle      # Java Gradle projects
  - mix.exs           # Elixir projects
  
  # Web frameworks
  - next.config.js     # Next.js projects
  - nuxt.config.js     # Nuxt.js projects
  - vue.config.js      # Vue.js projects
  - angular.json       # Angular projects
  - svelte.config.js   # Svelte projects
  - vite.config.js     # Vite projects
  - webpack.config.js  # Webpack projects
  - rollup.config.js   # Rollup projects
  
  # Mobile development
  - pubspec.yaml       # Flutter/Dart projects
  - ios/              # React Native iOS
  - android/          # React Native Android
  - App.js            # React Native entry
  - App.tsx           # React Native TypeScript
  
  # Infrastructure & DevOps
  - Dockerfile        # Docker projects
  - docker-compose.yml # Docker Compose
  - Makefile          # Make-based projects
  - Vagrantfile       # Vagrant projects
  - terraform.tf      # Terraform configs
  - main.tf           # Terraform main
  - ansible.cfg       # Ansible projects
  - playbook.yml      # Ansible playbooks
  
  # Kubernetes
  - kustomization.yaml # Kustomize
  - Chart.yaml        # Helm charts
  - deployment.yaml   # K8s deployments
  - service.yaml      # K8s services
  
  # Documentation & Config
  - README.md         # Documentation projects
  - README.rst        # reStructuredText docs
  - mkdocs.yml        # MkDocs documentation
  - .gitignore        # Git repositories
  - .git/             # Git directory
  - LICENSE           # Licensed projects
  - Makefile          # Build automation
  
  # IDE & Editor configs
  - .vscode/          # VS Code workspace
  - .idea/            # IntelliJ IDEA
  - .editorconfig     # Editor configuration
  
  # CI/CD
  - .github/          # GitHub Actions
  - .gitlab-ci.yml    # GitLab CI
  - .travis.yml       # Travis CI
  - .circleci/        # CircleCI
  - Jenkinsfile       # Jenkins
  
  # Database
  - schema.sql        # SQL schema
  - migrations/       # Database migrations
  - seeds/            # Database seeds

# =============================================================================
# EXCLUDED DIRECTORIES
# =============================================================================
# Directories to skip during scanning (improves performance)
excluded_dirs:
  # Node.js
  - node_modules
  - .npm
  - .yarn
  
  # Python
  - __pycache__
  - .venv
  - venv
  - env
  - .env
  - .pytest_cache
  - .mypy_cache
  - site-packages
  
  # Go
  - vendor
  - .mod
  
  # Rust
  - target
  - .cargo
  
  # Java
  - .gradle
  - build
  - .m2
  
  # General build outputs
  - dist
  - out
  - bin
  - obj
  - build
  - public
  - .next
  - .nuxt
  - .output
  
  # Version control
  - .git
  - .svn
  - .hg
  - .bzr
  
  # IDEs
  - .vscode
  - .idea
  - .vs
  - .eclipse
  
  # OS files
  - .DS_Store
  - Thumbs.db
  - .Trash
  
  # Logs and temps
  - logs
  - .log
  - tmp
  - temp
  - .cache
  - .temp
  
  # Docker
  - .docker
  
  # Backup files
  - "*.bak"
  - "*.backup"
  - "*.old"

# =============================================================================
# SCAN CONFIGURATION
# =============================================================================
# Core scanning behavior settings

# Schedule for automatic project discovery (cron format)
# "0 9 * * *" = Every day at 9:00 AM
# "0 */6 * * *" = Every 6 hours
# "0 0 * * 1" = Every Monday at midnight
update_schedule: "0 9 * * *"

# Maximum directory depth to scan (prevents infinite recursion)
max_scan_depth: 4

# Minimum project size in bytes (skip tiny directories)
min_project_size: 1024

# Maximum number of projects to discover (prevents memory issues)
max_projects: 100

# Timeout for scanning each directory (in seconds)
scan_timeout_seconds: 30

# Enable/disable parallel scanning for better performance
parallel_scanning: true

# Number of parallel workers for scanning
max_workers: 4

# =============================================================================
# PROJECT CLASSIFICATION
# =============================================================================
# Rules for automatically categorizing discovered projects

project_types:
  # Web Applications
  web_frontend:
    indicators: [package.json, src/App.js, src/App.vue, src/App.tsx]
    tech_stack: ["JavaScript", "TypeScript", "React", "Vue", "Angular"]
    
  web_backend:
    indicators: [main.go, server.js, app.py, index.php]
    tech_stack: ["Go", "Node.js", "Python", "PHP"]
    
  # Mobile Applications
  mobile_flutter:
    indicators: [pubspec.yaml, lib/main.dart]
    tech_stack: ["Flutter", "Dart"]
    
  mobile_react_native:
    indicators: [package.json, App.js, ios/, android/]
    tech_stack: ["React Native", "JavaScript", "TypeScript"]
    
  # Infrastructure
  infrastructure:
    indicators: [terraform.tf, ansible.cfg, Dockerfile]
    tech_stack: ["Terraform", "Ansible", "Docker", "Kubernetes"]
    
  # Data & Analytics
  data_science:
    indicators: [requirements.txt, "*.ipynb", data/, notebooks/]
    tech_stack: ["Python", "Jupyter", "Pandas", "NumPy"]

# =============================================================================
# FILE SIZE LIMITS
# =============================================================================
# Limits for reading file contents

# Maximum file size to read and display (in bytes)
max_file_size: 1048576  # 1MB

# Maximum number of files to list in a directory
max_files_per_directory: 50

# File extensions to prioritize when showing project contents
priority_extensions:
  - .md
  - .go
  - .js
  - .ts
  - .py
  - .vue
  - .jsx
  - .tsx
  - .yaml
  - .yml
  - .json
  - .toml

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================
# Performance optimization settings

# Cache project index for faster subsequent scans
enable_caching: true

# Cache duration in minutes
cache_duration_minutes: 60

# Cache file location (relative to application directory)
cache_file_path: "./data/project_cache.json"

# Force refresh cache on startup
force_refresh_on_startup: false

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Scanner-specific logging settings

# Enable detailed scanning logs
enable_scan_logging: true

# Log file location
scan_log_file: "./logs/scanner.log"

# Log level for scanner (debug, info, warn, error)
scan_log_level: "info"

# Log successful scans
log_successful_scans: true

# Log skipped directories
log_skipped_directories: false

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================
# Settings for integration with other components

# Claude Code CLI integration
claude_integration:
  # Enable Claude Code CLI for project analysis
  enabled: true
  
  # Timeout for Claude Code operations (seconds)
  timeout: 30
  
  # Maximum output size from Claude Code
  max_output_size: 10240  # 10KB

# Git integration
git_integration:
  # Enable Git repository detection
  enabled: true
  
  # Include Git status in project info
  include_git_status: true
  
  # Include branch information
  include_branch_info: true
  
  # Include last commit info
  include_last_commit: true

# =============================================================================
# ADVANCED FEATURES
# =============================================================================
# Additional scanner capabilities

# Detect dependencies and tech stack automatically
auto_detect_tech_stack: true

# Include file count in project summary
include_file_count: true

# Include project size in bytes
include_project_size: true

# Detect project activity (last modified date)
detect_project_activity: true

# Scan for TODO/FIXME comments
scan_for_todos: false

# Include README content preview
include_readme_preview: true

# Maximum README preview length
readme_preview_length: 200